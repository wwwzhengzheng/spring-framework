<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.annotation.AnnotationFilterTests" tests="12" skipped="0" failures="0" errors="0" timestamp="2020-12-21T06:24:26" hostname="LAPTOP-B97AJCLT" time="0.011">
  <properties/>
  <testcase name="matchesAnnotationClassWhenNoMatchReturnsFalse()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="plainWhenJavaLangAnnotationReturnsTrue()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="matchesAnnotationWhenMatchReturnsTrue()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.002"/>
  <testcase name="plainWhenSpringLangAnnotationReturnsTrue()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="matchesAnnotationWhenNoMatchReturnsFalse()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.001"/>
  <testcase name="javaWhenSpringLangAnnotationReturnsFalse()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.001"/>
  <testcase name="matchesAnnotationClassWhenMatchReturnsTrue()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.001"/>
  <testcase name="javaWhenJavaxAnnotationReturnsTrue()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="javaWhenJavaLangAnnotationReturnsTrue()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="javaWhenOtherAnnotationReturnsFalse()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="plainWhenOtherAnnotationReturnsFalse()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <testcase name="noneReturnsFalse()" classname="org.springframework.core.annotation.AnnotationFilterTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
