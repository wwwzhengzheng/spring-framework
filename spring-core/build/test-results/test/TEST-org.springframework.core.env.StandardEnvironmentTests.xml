<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.env.StandardEnvironmentTests" tests="40" skipped="0" failures="0" errors="0" timestamp="2020-12-21T06:24:30" hostname="LAPTOP-B97AJCLT" time="0.088">
  <properties/>
  <testcase name="getActiveProfiles_fromSystemProperties_withMultipleProfiles()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="suppressGetenvAccessThroughSpringFlag()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="acceptsProfiles_withNullArgument()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="setDefaultProfiles_withNotOperator()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="addActiveProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="acceptsProfiles_withEmptyArgument()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="getActiveProfiles_systemPropertiesEmpty()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="acceptsProfiles_withEmptyArgumentList()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="getSystemProperties_withAndWithoutSecurityManager()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.05"/>
  <testcase name="suppressGetenvAccessThroughSystemProperty()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="acceptsProfiles_withNotOperator()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="acceptsProfiles_withNullArgumentList()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="acceptsProfiles_withProfileExpression()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="setActiveProfiles_withNotOperator()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="acceptsProfiles_defaultProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="setDefaultProfiles_withNullProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="setActiveProfiles()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="acceptsProfiles_activeProfileSetProgrammatically()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="setDefaultProfiles_withNullProfileArray()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="defaultProfilesContainsDefaultProfileByDefault()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="merge()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="reservedDefaultProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="getActiveProfiles_fromSystemProperties()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="activeProfilesIsEmptyByDefault()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="getDefaultProfiles()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="addActiveProfile_whenActiveProfilesPropertyIsAlreadySet()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="getSystemEnvironment_withAndWithoutSecurityManager()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.01"/>
  <testcase name="suppressGetenvAccessThroughSpringProperty()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="setActiveProfiles_withNullProfileArray()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="setDefaultProfiles_withEmptyProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="acceptsProfiles_activeProfileSetViaProperty()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="setActiveProfiles_withNullProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="acceptsProfiles_withInvalidNotOperator()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="propertySourceOrder()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="propertySourceTypes()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="setDefaultProfiles()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="getActiveProfiles_fromSystemProperties_withMulitpleProfiles_withWhitespace()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.0"/>
  <testcase name="environmentSubclass_withCustomProfileValidation()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="defaultProfileWithCircularPlaceholder()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <testcase name="setActiveProfiles_withEmptyProfile()" classname="org.springframework.core.env.StandardEnvironmentTests" time="0.001"/>
  <system-out><![CDATA[14:24:30.110 [Test worker] INFO  o.s.c.e.StandardEnvironment - Caught AccessControlException when accessing system property 'verboten'; its value will be returned [null]. Reason: Accessing the system property [verboten] is disallowed
14:24:30.146 [Test worker] INFO  o.s.c.e.StandardEnvironment - Caught AccessControlException when accessing system environment variable 'verboten'; its value will be returned [null]. Reason: Accessing the system environment variable [verboten] is disallowed
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
